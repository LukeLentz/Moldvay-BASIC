# 1 "lexer.mll"
 
  open Parser
  exception Eof
  exception Unrecognized

# 8 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\233\255\234\255\002\000\003\000\004\000\005\000\239\255\
    \240\255\241\255\001\000\002\000\004\000\001\000\000\000\001\000\
    \001\000\002\000\003\000\019\000\031\000\019\000\011\000\002\000\
    \007\000\008\000\253\255\085\000\095\000\105\000\117\000\005\000\
    \002\000\008\000\251\255\011\000\248\255\250\255\014\000\008\000\
    \023\000\249\255\010\000\025\000\247\255\246\255\027\000\245\255\
    \019\000\015\000\244\255\063\000\242\255\061\000\243\255\237\255\
    \236\255\235\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\020\000\020\000\022\000\022\000\255\255\
    \255\255\255\255\022\000\022\000\022\000\022\000\022\000\022\000\
    \022\000\022\000\022\000\022\000\003\000\022\000\017\000\000\000\
    \000\000\000\000\255\255\255\255\003\000\003\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\000\000\255\255\255\255\255\255\255\255\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\025\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\255\255\000\000\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000\000\000\255\255\000\000\
    \255\255\255\255\000\000\255\255\000\000\255\255\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\023\000\023\000\023\000\023\000\024\000\000\000\023\000\
    \023\000\023\000\255\255\000\000\023\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \023\000\005\000\023\000\017\000\000\000\000\000\000\000\023\000\
    \000\000\000\000\007\000\009\000\000\000\008\000\019\000\022\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\020\000\025\000\021\000\003\000\006\000\004\000\057\000\
    \057\000\056\000\055\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\026\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\012\000\038\000\048\000\027\000\014\000\016\000\041\000\
    \037\000\015\000\035\000\031\000\042\000\034\000\011\000\013\000\
    \053\000\049\000\046\000\045\000\018\000\032\000\034\000\033\000\
    \010\000\036\000\039\000\040\000\037\000\043\000\044\000\047\000\
    \030\000\051\000\030\000\050\000\027\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\052\000\027\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\029\000\029\000\029\000\029\000\054\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\027\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\023\000\023\000\000\000\255\255\023\000\
    \024\000\024\000\025\000\255\255\024\000\025\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\023\000\000\000\255\255\255\255\255\255\024\000\
    \255\255\255\255\000\000\000\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\022\000\000\000\000\000\000\000\000\000\003\000\
    \004\000\005\000\006\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\019\000\019\000\019\000\020\000\021\000\020\000\
    \020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
    \020\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\016\000\011\000\020\000\000\000\000\000\015\000\
    \017\000\000\000\031\000\018\000\014\000\033\000\000\000\000\000\
    \010\000\011\000\012\000\013\000\000\000\018\000\017\000\032\000\
    \000\000\035\000\038\000\039\000\040\000\042\000\043\000\046\000\
    \027\000\048\000\027\000\049\000\020\000\027\000\027\000\027\000\
    \027\000\027\000\027\000\027\000\027\000\027\000\027\000\028\000\
    \028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
    \028\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
    \029\000\029\000\029\000\051\000\028\000\030\000\030\000\030\000\
    \030\000\030\000\030\000\030\000\030\000\030\000\030\000\053\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\028\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \025\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 21 "lexer.mll"
                ( token lexbuf )
# 154 "lexer.ml"

  | 1 ->
# 22 "lexer.mll"
                ( token lexbuf )
# 159 "lexer.ml"

  | 2 ->
# 23 "lexer.mll"
                ( DBLSEMI )
# 164 "lexer.ml"

  | 3 ->
let
# 24 "lexer.mll"
             x
# 170 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 24 "lexer.mll"
                ( FLOAT (float_of_string x) )
# 174 "lexer.ml"

  | 4 ->
# 25 "lexer.mll"
                ( TRUE )
# 179 "lexer.ml"

  | 5 ->
# 26 "lexer.mll"
                ( FALSE )
# 184 "lexer.ml"

  | 6 ->
# 27 "lexer.mll"
           ( IF )
# 189 "lexer.ml"

  | 7 ->
# 28 "lexer.mll"
            ( THEN )
# 194 "lexer.ml"

  | 8 ->
# 29 "lexer.mll"
            ( ELSE )
# 199 "lexer.ml"

  | 9 ->
# 30 "lexer.mll"
          ( OR )
# 204 "lexer.ml"

  | 10 ->
# 31 "lexer.mll"
            ( AND )
# 209 "lexer.ml"

  | 11 ->
# 32 "lexer.mll"
            ( NOT )
# 214 "lexer.ml"

  | 12 ->
# 33 "lexer.mll"
              ( XOR )
# 219 "lexer.ml"

  | 13 ->
# 34 "lexer.mll"
              ( NAND )
# 224 "lexer.ml"

  | 14 ->
# 35 "lexer.mll"
          ( PLUS )
# 229 "lexer.ml"

  | 15 ->
# 36 "lexer.mll"
          ( MINUS )
# 234 "lexer.ml"

  | 16 ->
# 37 "lexer.mll"
          ( TIMES )
# 239 "lexer.ml"

  | 17 ->
# 38 "lexer.mll"
          ( DIVIDE )
# 244 "lexer.ml"

  | 18 ->
# 39 "lexer.mll"
           ( EQ )
# 249 "lexer.ml"

  | 19 ->
# 40 "lexer.mll"
                ( NEQ )
# 254 "lexer.ml"

  | 20 ->
let
# 41 "lexer.mll"
            s
# 260 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 41 "lexer.mll"
                ( COMPOP s )
# 264 "lexer.ml"

  | 21 ->
# 42 "lexer.mll"
                ( raise Eof )
# 269 "lexer.ml"

  | 22 ->
# 43 "lexer.mll"
                ( raise Unrecognized )
# 274 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

;;

